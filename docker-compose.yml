version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "devglan-test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  discovery-server-1:
    image: openjdk
    ports:
      - "8761:8761"
    networks:
        - webnet
    environment:
        - PORT=8761
        - PEER_PORT=8762
        - PEER1=discovery-server-1
        - PEER2=discovery-server-2
        - PEER3=discovery-server-3
        - APPNAME=discovery-server-1
        - NAME=discovery_server
        - CONFIG_SERVER=config_server
  discovery-server-2:
    image: dheerajdac/discovery_server
    networks:
        - webnet
    ports:
      - "8762:8762"
    environment:
        - PORT=8762
        - PEER_PORT=8761
        - PEER1=discovery-server-1
        - PEER2=discovery-server-2
        - PEER3=discovery-server-3
        - NAME=discovery_server
        - APPNAME=discovery-server-2
  discovery-server-3:
    image: dheerajdac/discovery_server
    networks:
        - webnet
    ports:
      - "8763:8763"
    environment:
        - PORT=8763
        - PEER_PORT=8761
        - PEER1=discovery-server-1
        - PEER2=discovery-server-2
        - PEER3=discovery-server-3
        - NAME=discovery_server
        - APPNAME=discovery-server-3
  config-server-1:
    image: config
    networks:
      - webnet
    ports:
      - "8888:8888"
    environment:
      - PORT=8888
      - PEER1=discovery-server-1
      - PEER2=discovery-server-2
      - PEER3=discovery-server-3
  config-server-2:
    image: config
    networks:
      - webnet
    ports:
      - "8889:8889"
    environment:
      - PORT=8889
      - PEER1=discovery-server-1
      - PEER2=discovery-server-2
      - PEER3=discovery-server-3
  redis:
    image: redis
    networks:
      - webnet
    ports:
      - "6379:6379"
  kibana:
    image: docker.elastic.co/kibana/kibana:6.6.1
    ports:
      - "5601:5601"
    networks:
      - webnet
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - webnet
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.1
    container_name: elasticsearch2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - webnet
  logstash:
    image: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    networks:
      - webnet
volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local

networks:
  webnet:
